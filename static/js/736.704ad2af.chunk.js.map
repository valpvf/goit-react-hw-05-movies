{"version":3,"file":"static/js/736.704ad2af.chunk.js","mappings":"iPAEaA,EAAaC,EAAAA,GAAAA,GAAH,+CAIVC,EAAcD,EAAAA,GAAAA,GAAH,qF,SCyCxB,EAzCa,WACX,IAAME,GAASC,EAAAA,EAAAA,MACf,GAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KACMC,EAAKL,EAAOM,QAAQC,MAAM,GAWhC,OAVAC,EAAAA,EAAAA,YACE,SAAAL,GACEE,IACEI,EAAAA,EAAAA,GAAa,UAAD,OAAWJ,EAAX,aACTK,MAAK,SAAAP,GAAI,OAAIC,EAAQD,EAAZ,IACTQ,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,GAEjB,GACD,CAACV,KAGD,SAACR,EAAD,CAAYmB,MAAO,CAAEC,QAAS,OAAQC,SAAU,OAAQC,IAAK,IAA7D,SACIhB,EAAKA,MAA6B,IAArBA,EAAKiB,aAA0C,IAArBjB,EAAKA,KAAKkB,OAGjDlB,EAAKA,MACLA,EAAKA,KAAKmB,KAAI,SAAAC,GAAE,OACd,UAACxB,EAAD,CAAyBiB,MAAO,CAAEQ,MAAO,KAAzC,WACE,gBACEC,IACEF,EAAGG,aAAH,0CACuCH,EAAGG,cACtC,4JAENC,IAAI,GACJH,MAAM,MACNI,OAAQ,OAEV,uBAAIL,EAAGM,QACP,0CAAkBN,EAAGO,eAZLP,EAAGlB,GADP,KAHhB,qEAsBP,C,mEC3CD0B,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAEatB,EAAe,SAACuB,EAAUC,EAAGC,GACxC,OAAOH,EAAAA,EAAAA,IACAC,EAAU,CACbhC,OAAQ,CACNmC,QANQ,mCAORD,KAAAA,EAEAE,MAAOH,KAGVvB,MAAK,SAAA2B,GAAG,OAAIA,EAAIC,IAAR,GACZ,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/movieApi.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ListStyled = styled.ul`\n    list-style: none;\n`\n\nexport const CardsStyled = styled.li`\n    box-shadow: 2px 2px 2px 2px rgba(204, 204, 204, 0.718);\n`","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesApi } from 'services/movieApi';\n\nimport { ListStyled, CardsStyled } from './Cast.styled';\n\nconst Cast = () => {\n  const params = useParams();\n  const [cast, setCast] = useState({});\n  const id = params.movieId.slice(1);\n  useEffect(\n    cast => {\n      id &&\n        getMoviesApi(`/movie/${id}/credits`)\n          .then(cast => setCast(cast))\n          .catch(error => console.log(error.message));\n      // console.log('useEffect called');\n    },\n    [id]\n  );\n  return (\n    <ListStyled style={{ display: 'flex', flexWrap: 'wrap', gap: 20 }}>\n      {!cast.cast || cast.total_pages === 0 || cast.cast.length === 0 ? (\n        <h3>We don't have any casts for this movie.</h3>\n      ) : (\n        cast.cast &&\n        cast.cast.map(el => (\n          <CardsStyled key={el.id} style={{ width: 150 }}>\n            <img\n              src={\n                el.profile_path\n                  ? `https://image.tmdb.org/t/p/w154/${el.profile_path}`\n                  : 'https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-4-user-grey-d8fe957375e70239d6abdd549fd7568c89281b2179b5f4470e2e12895792dfa5.svg'\n              }\n              alt=\"\"\n              width=\"154\"\n              height={231}\n            />\n            <p>{el.name}</p>\n            <span>Character: {el.character}</span>\n          </CardsStyled>\n        ))\n      )}\n    </ListStyled>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '55c2c220c53d8c4fecff89ed1dddc5f1';\n\nexport const getMoviesApi = (endpoint, q, page) => {\n  return axios\n    .get(endpoint, {\n      params: {\n        api_key: API_KEY,\n        page,\n        // language: 'uk-UA',\n        query: q,\n      },\n    })\n    .then(res => res.data);\n};\n"],"names":["ListStyled","styled","CardsStyled","params","useParams","useState","cast","setCast","id","movieId","slice","useEffect","getMoviesApi","then","catch","error","console","log","message","style","display","flexWrap","gap","total_pages","length","map","el","width","src","profile_path","alt","height","name","character","axios","endpoint","q","page","api_key","query","res","data"],"sourceRoot":""}